(1) Closures in JavaScript ----

A closure is the combination of a function bundled(enclosed) together with its lexical environment within which
 that function was declared. i.e, It is an inner function that has access to the outer or enclosing function’s
variables, functions and other data even after the outer function has finished its execution. The closure has 
three scope chains.

Own scope where variables defined between its curly brackets
Outer function's variables
Global variables

Scope Chain: In JavaScript, each function has access to its variables, as well as variables from all its ancestor scopes, creating a chain of scopes known as the “scope chain.“

Lexical Scoping: Closures are based on lexical scoping, which means that a function’s scope is determined by its position in the source code.

Function Inside Function: When a function is defined inside another function, it forms a closure. The inner function has access to the outer function’s variables, even after the outer function has completed its execution.
